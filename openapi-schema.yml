openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/dj-rest-auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/user/:
    get:
      operationId: retrieveUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
  /account/api/v1/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accounts'
          description: ''
      tags:
      - account
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accounts'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Accounts'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Accounts'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: ''
      tags:
      - account
  /account/api/v1/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this users.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: ''
      tags:
      - account
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this users.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accounts'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Accounts'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Accounts'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: ''
      tags:
      - account
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this users.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accounts'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Accounts'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Accounts'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: ''
      tags:
      - account
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this users.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - account
  /course/api/v1/:
    get:
      operationId: listCourseModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
    post:
      operationId: createCourseModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
  /course/api/v1/{id}/:
    get:
      operationId: retrieveCourseModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this course model.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
    put:
      operationId: updateCourseModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this course model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
    patch:
      operationId: partialUpdateCourseModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this course model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
    delete:
      operationId: destroyCourseModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this course model.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - course
  /course/api/v1/comments/:
    get:
      operationId: listCommentModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseComments'
          description: ''
      tags:
      - course
    post:
      operationId: createCommentModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseComments'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseComments'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseComments'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseComments'
          description: ''
      tags:
      - course
  /order/api/v1/:
    get:
      operationId: listOrderModels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - order
    post:
      operationId: createOrderModel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - order
  /order/api/v1/{id}/:
    get:
      operationId: retrieveOrderModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order model.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - order
    post:
      operationId: createOrderModel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order model.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - order
  /profile/api/v1/students/:
    get:
      operationId: listStudents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - profile
    post:
      operationId: createStudent
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - profile
  /profile/api/v1/students/{id}/:
    get:
      operationId: retrieveStudent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this student.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - profile
    put:
      operationId: updateStudent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this student.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - profile
    patch:
      operationId: partialUpdateStudent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this student.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
      tags:
      - profile
    delete:
      operationId: destroyStudent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this student.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - profile
  /profile/api/v1/teachers/:
    get:
      operationId: listTeachers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
          description: ''
      tags:
      - profile
    post:
      operationId: createTeacher
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
      tags:
      - profile
  /profile/api/v1/teachers/{id}/:
    get:
      operationId: retrieveTeacher
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this teacher.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
      tags:
      - profile
    put:
      operationId: updateTeacher
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this teacher.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
      tags:
      - profile
    patch:
      operationId: partialUpdateTeacher
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this teacher.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teacher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: ''
      tags:
      - profile
    delete:
      operationId: destroyTeacher
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this teacher.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - profile
  /api/v1/dj-rest-auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/login/:
    post:
      operationId: createLogin
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/registration/:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/registration/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/v1/dj-rest-auth/registration/resend-email/:
    post:
      operationId: createResendEmailVerification
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
      tags:
      - api
components:
  schemas:
    UserDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 32
        last_name:
          type: string
          maxLength: 32
      required:
      - username
      - first_name
      - last_name
    Accounts:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        first_name:
          type: string
          maxLength: 32
        last_name:
          type: string
          maxLength: 32
        email:
          type: string
          maxLength: 32
        phone:
          type: string
          maxLength: 32
        self_detail:
          type: string
        is_superuser:
          type: boolean
        is_staff:
          type: boolean
        is_active:
          type: boolean
        is_verified:
          type: boolean
        role:
          enum:
          - 1
          - 2
          type: integer
        date_login:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - password
      - username
      - first_name
      - last_name
      - email
      - phone
      - self_detail
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 56
        description:
          type: string
          maxLength: 128
        price:
          type: number
        video:
          type: string
          format: binary
          nullable: true
        video_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - title
      - description
    CourseComments:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
        course:
          type: integer
      required:
      - comment
      - author
      - course
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_at:
          type: string
          format: date-time
          readOnly: true
        student:
          type: integer
        courses:
          type: integer
      required:
      - student
      - courses
    Student:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 32
        last_name:
          type: string
          nullable: true
          maxLength: 32
        email:
          type: string
          nullable: true
          maxLength: 32
        phone:
          type: string
          maxLength: 13
        self_detail:
          type: string
        avatar:
          type: string
          format: binary
          nullable: true
        purpose:
          type: string
          maxLength: 128
        interests:
          type: string
          maxLength: 128
        student_user:
          type: integer
        student_course:
          type: integer
      required:
      - phone
      - self_detail
      - purpose
      - interests
      - student_user
      - student_course
    Teacher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 32
        last_name:
          type: string
          maxLength: 32
        email:
          type: string
          maxLength: 32
        phone:
          type: string
          maxLength: 13
        self_detail:
          type: string
        avatar:
          type: string
          format: binary
        purpose:
          type: string
          maxLength: 128
        portfolio:
          type: string
          format: binary
        teacher_user:
          type: integer
      required:
      - first_name
      - last_name
      - email
      - phone
      - self_detail
      - avatar
      - purpose
      - portfolio
      - teacher_user
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - password1
      - password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
